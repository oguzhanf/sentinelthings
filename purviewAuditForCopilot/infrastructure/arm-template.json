{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "description": "ARM template for deploying Microsoft 365 Copilot audit log ingestion solution to Microsoft Sentinel"
    },
    "parameters": {
        "logicAppName": {
            "type": "string",
            "defaultValue": "copilot-audit-ingestion",
            "metadata": {
                "description": "Name of the Logic App"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]",
            "metadata": {
                "description": "Azure AD Tenant ID"
            }
        },
        "workspaceResourceId": {
            "type": "string",
            "metadata": {
                "description": "Resource ID of the Log Analytics workspace (Sentinel)"
            }
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace ID (GUID)"
            }
        },
        "workspaceKey": {
            "type": "securestring",
            "metadata": {
                "description": "Log Analytics Workspace Primary Key"
            }
        },
        "recurrenceFrequency": {
            "type": "string",
            "defaultValue": "Hour",
            "allowedValues": [
                "Minute",
                "Hour",
                "Day"
            ],
            "metadata": {
                "description": "Frequency for the Logic App trigger"
            }
        },
        "recurrenceInterval": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Interval for the Logic App trigger"
            }
        },
        "enableSystemAssignedIdentity": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable system-assigned managed identity for the Logic App"
            }
        }
    },
    "variables": {
        "logicAppResourceId": "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]",
        "workspaceResourceGroup": "[split(parameters('workspaceResourceId'), '/')[4]]",
        "workspaceName": "[split(parameters('workspaceResourceId'), '/')[8]]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2019-05-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "[if(parameters('enableSystemAssignedIdentity'), 'SystemAssigned', 'None')]"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "tenantId": {
                            "type": "string",
                            "defaultValue": "[parameters('tenantId')]"
                        },
                        "workspaceId": {
                            "type": "string",
                            "defaultValue": "[parameters('workspaceId')]"
                        },
                        "workspaceKey": {
                            "type": "securestring",
                            "defaultValue": "[parameters('workspaceKey')]"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "type": "Recurrence",
                            "recurrence": {
                                "frequency": "[parameters('recurrenceFrequency')]",
                                "interval": "[parameters('recurrenceInterval')]",
                                "timeZone": "UTC"
                            }
                        }
                    },
                    "actions": {
                        "Initialize_StartTime": {
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StartTime",
                                        "type": "string",
                                        "value": "@{addHours(utcNow(), -1)}"
                                    }
                                ]
                            }
                        },
                        "Initialize_EndTime": {
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EndTime",
                                        "type": "string",
                                        "value": "@{utcNow()}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_StartTime": ["Succeeded"]
                            }
                        },
                        "Get_Access_Token": {
                            "type": "Http",
                            "inputs": {
                                "method": "POST",
                                "uri": "https://login.microsoftonline.com/@{parameters('tenantId')}/oauth2/v2.0/token",
                                "headers": {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "body": "grant_type=client_credentials&scope=https://manage.office.com/.default",
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                }
                            },
                            "runAfter": {
                                "Initialize_EndTime": ["Succeeded"]
                            }
                        },
                        "Parse_Token_Response": {
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_Access_Token')",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {"type": "string"},
                                        "token_type": {"type": "string"},
                                        "expires_in": {"type": "integer"}
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_Access_Token": ["Succeeded"]
                            }
                        },
                        "Get_Copilot_Audit_Logs": {
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "https://manage.office.com/api/v1.0/@{parameters('tenantId')}/activity/feed/subscriptions/content?contentType=Audit.Copilot&startTime=@{variables('StartTime')}&endTime=@{variables('EndTime')}",
                                "headers": {
                                    "Authorization": "Bearer @{body('Parse_Token_Response')['access_token']}",
                                    "Content-Type": "application/json"
                                }
                            },
                            "runAfter": {
                                "Parse_Token_Response": ["Succeeded"]
                            }
                        },
                        "Check_If_Logs_Available": {
                            "type": "Condition",
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Get_Copilot_Audit_Logs'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "actions": {
                                "Process_Audit_Logs": {
                                    "type": "Compose",
                                    "inputs": {
                                        "message": "Processing Copilot audit logs",
                                        "count": "@length(body('Get_Copilot_Audit_Logs'))"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_Copilot_Audit_Logs": ["Succeeded"]
                            },
                            "else": {
                                "actions": {
                                    "Log_No_Data_Found": {
                                        "type": "Compose",
                                        "inputs": {
                                            "message": "No Copilot audit logs found",
                                            "startTime": "@variables('StartTime')",
                                            "endTime": "@variables('EndTime')"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "logicAppResourceId": {
            "type": "string",
            "value": "[variables('logicAppResourceId')]"
        },
        "logicAppName": {
            "type": "string",
            "value": "[parameters('logicAppName')]"
        },
        "principalId": {
            "type": "string",
            "value": "[if(parameters('enableSystemAssignedIdentity'), reference(variables('logicAppResourceId'), '2019-05-01', 'Full').identity.principalId, '')]"
        },
        "tenantId": {
            "type": "string",
            "value": "[if(parameters('enableSystemAssignedIdentity'), reference(variables('logicAppResourceId'), '2019-05-01', 'Full').identity.tenantId, '')]"
        }
    }
}
